name: Continuous Integration and Deployment

on:
  push:
    branches:
      - main

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.x"

      - name: Set environment variables for database connection
        env:
          DB_SERVER: ${{ secrets.DB_SERVER }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          SSH_DOMAIN: ${{ secrets.SSH_DOMAIN }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PASS: ${{ secrets.SSH_PASSWORD }}
        run: echo "Database environment variables set."

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release

      - name: Run unit tests
        run: dotnet test --configuration Release --framework net8.0 --verbosity normal

      - name: Publish the WebAPI
        if: success()
        run: dotnet publish --configuration Release --output ./output

      - name: Install sshpass and rsync
        run: |
          sudo apt-get install -y sshpass rsync

      - name: Install cloudflared
        if: success()
        run: |
          wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb
          sudo dpkg -i cloudflared-linux-amd64.deb

      - name: Copy files to server using rsync (excluding appsettings.json and Assets folder)
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" rsync -avz --exclude 'appsettings.json' --exclude 'VTA.API/Assets' -e "ssh -o StrictHostKeyChecking=no -o ProxyCommand=\"cloudflared access ssh --hostname ${{ secrets.SSH_DOMAIN }}\"" ./output/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_DOMAIN }}:/var/www/VTA.API/

      - name: Restart the service using SSH
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no -o ProxyCommand="cloudflared access ssh --hostname ${{ secrets.SSH_DOMAIN }}" ${{ secrets.SSH_USER }}@${{ secrets.SSH_DOMAIN }} "sudo systemctl restart vtaapi.service"
